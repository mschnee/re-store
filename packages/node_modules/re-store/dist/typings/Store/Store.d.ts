import { Store as ReduxStore } from 'redux';
import Reducer from '../Reducer';
interface ReducerConstructor<T> {
    new (store: Store): Reducer<T>;
}
export interface StoreOptions {
    redux?: ReduxStore;
    preloadState?: any;
    isNode?: boolean;
    isDev?: boolean;
    useRemoteDevtools?: boolean;
}
export default class Store {
    private reducerObjects;
    private isNode;
    private isDev;
    private useRemoteDevtools;
    private reduxStore;
    constructor(options?: StoreOptions);
    registerReducer<T>(reducerClass: ReducerConstructor<T>): void;
    getState(name?: string): any;
    dispatch(type: string, payload?: any): void;
    private createStore;
    private reduce;
}
export {};
