import { Map } from 'immutable';
export class Reducer {
    constructor(store, defaultState) {
        this.reducerMethods = {};
        this.store = store;
        this.defaultState = defaultState || Map({}); // todo: this might be bad :/
    }
    register(key, fn) {
        this.reducerMethods[key] = fn;
    }
    reduce(previousState, action) {
        const nextState = previousState || this.defaultState;
        if (!this.reducerMethods.hasOwnProperty(action.type)) {
            return nextState;
        }
        else {
            return this.reducerMethods[action.type](nextState, action.payload);
        }
    }
}
//# sourceMappingURL=Reducer.js.map