import { default as BaseReducer } from "@re-store/reducer";

import { ReducerConstructor } from '@re-store/types';

import { METADATA } from '../lib/types';

export default function Reducer<StateType>(Target: any) {
    const val = class extends Target {
        constructor(...args: any[]) {
            super(...args);
            BaseReducer.apply(this, ...args);
            if (this.hasOwnProperty(METADATA)) {
                this[METADATA as any].forEach((value:  (state: StateType, payload: any) => StateType, key: string | symbol) => {
                    BaseReducer.prototype.register.apply(this, [key, value]);
                });
            }
        }
    }

    return val as ReducerConstructor<StateType>;
}